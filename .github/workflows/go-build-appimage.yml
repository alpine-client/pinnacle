name: Build and Package

on:
  push:
    branches:
      - 'appimage'

permissions:
  contents: write

defaults:
  run:
    shell: bash

env:
  RELEASE: ${{ github.run_number }}
  CGO_ENABLED: 0

jobs:
  build_linux:
    name: "Build Linux"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Install dependencies
        run: >-
          sudo apt-get update

      - name: Set up Go
        uses: WillAbides/setup-go-faster@a0ff5217a7d2567ed6ff1aa2b7d8f9d58173b2c9 # v1.14.0
        with:
          go-version-file: 'go.mod'

      - name: Read version
        run: |
          echo "VERSION=$(cat VERSION)" >> $GITHUB_ENV

      - name: Build AMD64
        run: >-
          env
          GOARCH=amd64
          GOOS=linux
          go build -a -v -trimpath -buildmode=pie -mod=readonly -modcacherw
          -ldflags="-s -w -X main.version=${VERSION}"
          -o bin/pinnacle-linux-amd64
          .


      - name: Upload artifact
        uses: actions/upload-artifact@834a144ee995460fba8ed112a2fc961b36a5ec5a # v4.3.6
        with:
          name: linux-binaries
          path: bin
          retention-days: 1
          if-no-files-found: error

  package_linux:
    name: "Package Linux"
    runs-on: ubuntu-latest
    needs: [ build_linux ]

    steps:
      - name: Checkout pkg files
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          sparse-checkout: |
            pkg/linux
            VERSION
            ci

      - name: Download binaries
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: linux-binaries
          path: bin

      - name: Install dependencies
        run: >-
          sudo apt-get update &&
          sudo apt-get install -y
          rpm
          debhelper
          devscripts
          dpkg-dev
          libfuse2

      - name: Read version
        run: |
          echo "VERSION=$(cat VERSION)" >> $GITHUB_ENV

      - name: Download AppImageTool
        run: ./ci/download-appimagetool.sh

      - name: Prepare for packaging
        run: |
          # Set up rpmbuild/debbuild/appimage file tree
          mkdir -p ~/appbuild/AlpineClient.AppDir/usr/{bin,share/{icons/hicolor/scalable/apps,licenses/alpine-client}}

          # Copy resources
          cp -r pkg/linux/appimage/* ~/appbuild/AlpineClient.AppDir/

          # Copy binaries
          cp bin/pinnacle-linux-amd64 ~/appbuild/AlpineClient.AppDir/usr/bin/alpine-client
          
          # Make binaries executable
          chmod +x ~/appbuild/AlpineClient.AppDir/usr/bin/alpine-client
          chmod +x ~/appbuild/AlpineClient.AppDir/AppRun

          # Create output folder
          mkdir -p build/out

      - name: Package AMD64 AppImage
        run: >-
          ./appimagetool-x86_64.AppImage ~/appbuild/AlpineClient.AppDir
          "build/out/AlpineClient-${VERSION}-${RELEASE}-x86_64.AppImage"

      - name: Tidy artifacts
        run: |
          if [ -d "build/out/x86_64" ]; then
            cp -r build/out/x86_64/* build/out/
          fi
          if [ -d "build/out/aarch64" ]; then
            cp -r build/out/aarch64/* build/out/
          fi
          rm -rf build/out/x86_64
          rm -rf build/out/aarch64

      - name: Upload artifact
        uses: actions/upload-artifact@834a144ee995460fba8ed112a2fc961b36a5ec5a # v4.3.6
        with:
          name: linux-installers
          path: build/out
          retention-days: 1
          if-no-files-found: error